---
name: CI/CD

env:
  ENABLE_PYPI_PUBLISH: false
  ENABLE_TEST_PYPI_PUBLISH: true
  ENABLE_COVERAGE: true
  RELEASE_PYTHON_VERSION: "3.10"
  RELEASE_POETRY_VERSION: "1.1.14"

on:
  pull_request:
  push:
    branches:
      - main
    tags:
      - '*'
  workflow_dispatch:

jobs:
  test:
    name: Test with Python ${{ matrix.python-version }}, Poetry ${{ matrix.poetry-version }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version:
          - "3.10"
        poetry-version:
          - "1.1.14"

    steps:
      - name: üíæ Check out repository
        uses: actions/checkout@v3

      - name: üêç Set up Python project with Poetry
        uses: ./.github/workflows/actions/bootstrap
        with:
          python_version: ${{ matrix.python-version }}
          poetry_version: ${{ matrix.poetry-version }}

      - name: üî• Test
        run: poetry run poe test

      - name: üöí Create test summary
        uses: test-summary/action@v1
        if: success() || failure()
        with:
          paths: tests/pytest.xml

      - name: üìä Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        if: env.ENABLE_COVERAGE
        with:
          fail_ci_if_error: true

  publish:
    name: Publish package for ${{ github.ref_name }}
    needs: test

    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest

    steps:
      - name: üíæ Check out repository
        uses: actions/checkout@v3

      - name: üêç Set up Python project with Poetry
        uses: ./.github/workflows/actions/bootstrap
        with:
          python_version: ${{ env.RELEASE_PYTHON_VERSION }}
          poetry_version: ${{ env.RELEASE_POETRY_VERSION }}

      - name: üì¶ Build package
        if: env.ENABLE_PYPI_PUBLISH
        run: poetry build

      - name: üîº Publish to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        if: env.ENABLE_TEST_PYPI_PUBLISH
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
          skip_existing: true

      - name: ‚ò¢Ô∏è Publish to PyPI
        if: env.ENABLE_PYPI_PUBLISH
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}

concurrency:
  group: cicd-tests-${{ github.ref }}-1
  cancel-in-progress: true
